// HEX /////////// BINARY  ///////////////////// ASSEMBLER /////////


7080 // 16'b0111_0000_10000000    //   BAT1 %-, %-, 1;    	until Bstus=0 goto next Instruction
7000 // 16'b0111_0000_00000000    //   BAT0 %-, %-, 0;    	until Bstus=1 goto next Instruction
6100 // 16'b0110_0001_00000000    //   LDS  %1, %x, -;    	REG 1 <= import x1
6200 // 16'b0110_0010_00000000    //   LDS  %2, %x, -;   	REG 2 <= import x1
7080 // 16'b0111_0000_10000000    //   BAT1 %-, %-, 1;    	until Bstus=0 goto next Instruction
7000 // 16'b0111_0000_00000000    //   BAT0 %-, %-, 0;    	until Bstus=1 goto next Instruction
6300 // 16'b0110_0011_00000000    //   LDS  %3, %y, -;    	REG 3 <= import y1
6400 // 16'b0110_0100_00000000    //   LDS  %4, %y, -;    	REG 4 <= import y1
7080 // 16'b0111_0000_10000000    //   BAT1 %-, %-, 1;    	until Bstus=0 goto next Instruction
5160 // 16'b0101_0001_01100000    //   MULI %1, %1, 0.75; 	0.75x1
52C0 // 16'b0101_0010_11000000    //   MULI %2, %2, -0.5; 	-0.5x1
5340 // 16'b0101_0011_01000000    //   MULI %3, %3, 0.5 ; 	0.5y1
5460 // 16'b0101_0100_01100000    //   MULI %4, %4, 0.75; 	0.75y1
0103 // 16'b0000_0001_00000011    //   ADD  %1, %3  -; 	0.75x1 + 0.5y1
0204 // 16'b0000_0010_00000100    //   ADD  %2, %4  -; 	-0.5x1 + 0.75y1
1114 // 16'b0001_0001_00010100    //   ADDI %1, %1, 20  ;  	x2 = 0.75x1 + 0.5y1 + 20
//8100 // 16'b1000_0001_00000000    //   SHOW %1, %0, -;       SHOW %1
7000 // 16'b0111_0000_00000000    //   BAT0 %-, %-, 0;       until Bstus=1 goto next Instruction
12EC // 16'b0001_0010_11101100    //   ADDI %2, %2, -20;     y2 = -0.5x1 + 0.75y1 - 20
//8200 // 16'b1000_0010_00000000    //   SHOW %2, %0, -;       SHOW %2
7081 // 16'b0111_0000_10000001    //   BAT1 %-, %-, 2;       until Bstus=0 goto The 2 Instruction